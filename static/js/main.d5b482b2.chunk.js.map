{"version":3,"sources":["assets/home_wallpaper.jpg","assets/night.jpg","assets/day.jpg","Components/Home.js","Components/Game.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","PageStyle","backgroundImage","wallpaper","backgroundPosition","backgroundSize","backgroundRepeat","width","height","backgroundAttachment","alignContent","display","justifyContent","verticalAlign","alignItems","FormStyle","backgroundColor","borderRadius","boxShadow","GridItemStyle","Home","_useState","useState","_useState2","Object","slicedToArray","slideValue","setSlideValue","navigate","useNavigate","localStorage","getItem","react_default","a","createElement","className","style","Grid","container","xs","sm","md","direction","justify","item","Typography","color","Box","Slider","aria-label","defaultValue","getAriaValueText","value","step","marks","min","max","valueLabelDisplay","onChange","event","react_router_dom","to","Button","variant","onClick","setItem","DefaultGamePageStyle","GamePageStyleDay","objectSpread","day","GamePageStyleNight","night","SpaceItemsJustify","Game","parseInt","gameDay","setDay","_useState3","_useState4","turn","setTurn","_useState5","_useState6","fullMoon","setFullMoon","_useState7","_useState8","players","_useState9","_useState10","GamePageStyle","setGamePageStyle","spacing","marginTop","CalendarMonth_default","RotateRight_default","NightsStay_default","toString","lg","window","location","reload","AppStyle","margin","padding","App","react_router","path","element","exact","reportWebVitals","onPerfEntry","Function","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.d5b482b2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/home_wallpaper.05d41f40.jpg\";","module.exports = __webpack_public_path__ + \"static/media/night.52b518aa.jpg\";","module.exports = __webpack_public_path__ + \"static/media/day.7d2ae723.jpg\";","import React from \"react\";\nimport wallpaper from '../assets/home_wallpaper.jpg'\nimport Grid from '@mui/material/Grid';\nimport { Button, Slider, Box, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport {Link, useNavigate} from 'react-router-dom'\n\nvar PageStyle = {\n    backgroundImage: \"url(\" + wallpaper + \")\",\n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh',\n    backgroundAttachment: 'fixed',\n    alignContent: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    verticalAlign: 'middle',\n    alignItems: 'center'   \n}\n\nvar FormStyle = {\n    height: '300px',\n    backgroundColor: '#edf0f5',\n    borderRadius: '10px',\n    boxShadow: '0px 0px 15px black'\n}\n\nvar GridItemStyle = {\n    display: 'flex',\n    alignItems: 'center'\n}\n\nexport default function Home(){\n\n    const [slideValue, setSlideValue] = useState(2);\n    const handleChange = (event, value) => setSlideValue(value)\n    const navigate = useNavigate()\n\n    if(localStorage.getItem('inGame') == 'true')\n        navigate(\"/game\")\n\n    let slidervalue = value => value    \n    let clickButton = event => {localStorage.setItem('players', slideValue);\n                                localStorage.setItem('inGame', true)\n                                localStorage.setItem('gameDay', 1)\n                                localStorage.setItem('turn', 1)\n                                localStorage.setItem('fullMoon', false)\n                                }\n\n    return (\n        <div className=\"HomePage\" style={PageStyle}>\n            <Grid container xs={10} sm={6} md={4}  direction=\"column\" justify=\"center\" alignItems=\"center\" style={FormStyle}>\n\n                <Grid item xs={4} style={GridItemStyle}>\n                    <Typography color={'error'}>\n                        QUANTIDADE DE JOGADORES\n                    </Typography>\n                </Grid>\n\n                <Grid item xs={3} style={GridItemStyle}>\n                    \n                    <Box width=\"270px\">\n                        <Slider\n                            color='error'\n                            aria-label=\"Players\"\n                            defaultValue={2}\n                            getAriaValueText={slidervalue}\n                            step={1}\n                            marks\n                            min={2}\n                            max={6}\n                            valueLabelDisplay=\"auto\"\n                            onChange={handleChange}\n                        />\n                    </Box>\n\n                </Grid>\n\n                <Grid item xs={4} style={GridItemStyle}>\n                    <Link to='/game'>\n                        <Button variant='contained' color='error' onClick={clickButton}> Come√ßar</Button>\n                    </Link>    \n                </Grid>\n            \n            </Grid>\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport {Button, Grid, Typography} from '@mui/material'\nimport { useState } from \"react\";\nimport night from '../assets/night.jpg'\nimport day from '../assets/day.jpg'\nimport { Link, useNavigate } from \"react-router-dom\";\nimport NightsStayIcon from '@mui/icons-material/NightsStay';\nimport CalendarMonthIcon from '@mui/icons-material/CalendarMonth';\nimport RotateRightIcon from '@mui/icons-material/RotateRight';\n\n\nvar DefaultGamePageStyle = {\n    \n    backgroundPosition: 'center',\n    backgroundSize: 'cover',\n    backgroundRepeat: 'no-repeat',\n    width: '100vw',\n    height: '100vh',\n    backgroundAttachment: 'fixed',\n    alignContent: 'center',\n    display: 'flex',\n    justifyContent: 'center',\n    verticalAlign: 'middle',\n    alignItems: 'center' \n}\n\n\nvar GamePageStyleDay = {...DefaultGamePageStyle, backgroundImage: \"url(\" + day + \")\"}\nvar GamePageStyleNight = {...DefaultGamePageStyle, backgroundImage: \"url(\" + night + \")\"}\n\n\nvar FormStyle = {\n    height: '300px',\n    backgroundColor: '#edf0f5',\n    borderRadius: '10px',\n    boxShadow: '0px 0px 15px black'\n}\n\n\nvar SpaceItemsJustify = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    alignContent: 'center'\n}\n\nexport default function Game(){\n\n    const navigate = useNavigate()\n    const [gameDay, setDay] = useState(parseInt(localStorage.getItem('gameDay')))\n    const [turn, setTurn] = useState(parseInt(localStorage.getItem('turn')))\n    const [fullMoon, setFullMoon] = useState(localStorage.getItem('fullMoon') === 'true')\n    const [players, setPlayers] = useState(parseInt(localStorage.getItem('players')))\n    const [GamePageStyle, setGamePageStyle] = useState(GamePageStyleDay)\n\n    const resetAll = (event) => {\n        localStorage.setItem('gameDay', 1)\n        localStorage.setItem('inGame', false)\n        localStorage.setItem('turn', 1)\n        localStorage.setItem('fullMoon', false)\n        navigate(\"/\")\n        window.location.reload(false)        \n    }\n\n    const applyChanges = () => {\n        localStorage.setItem('gameDay', gameDay)\n        localStorage.setItem('turn', turn)\n        localStorage.setItem('fullMoon', fullMoon)\n    }\n\n    const makeLogic = () => { \n        \n        setTurn(turn + 1)\n        \n        if(turn % players == 0)\n            setDay(gameDay + 1)\n        \n        if(gameDay % 6 == 0)\n            setFullMoon(true)\n        else\n            setFullMoon(false)\n\n\n        // trocar dia para noite ou vice versa\n        if(turn % players == 0){\n\n            if(GamePageStyle.backgroundImage == GamePageStyleDay.backgroundImage)\n                setGamePageStyle(GamePageStyleNight)\n            \n            else\n                setGamePageStyle(GamePageStyleDay)\n\n        }\n    \n    }\n\n    let nextTurnButton = (event) => {\n\n        makeLogic()    \n        applyChanges()\n    }\n\n    return (\n    <div style={GamePageStyle}>\n        \n\n        <Grid xs={10} sm={8} md={5} direction={'column'} spacing={2} container style={FormStyle}>\n\n            <Grid container direction={'row'} style={{...SpaceItemsJustify, marginTop: '10px'}}>\n\n                <Grid item xs={4} sm={4} style={SpaceItemsJustify}> <CalendarMonthIcon/>  Dia: {gameDay} </Grid>\n                <Grid item xs={4} sm={4}style={SpaceItemsJustify}>  <RotateRightIcon/> Turno: {turn}</Grid>\n                <Grid item xs={4} sm={4} style={SpaceItemsJustify}> <NightsStayIcon/> {fullMoon.toString() == 'false' ? 'N√£o' : 'Sim'}</Grid>\n            \n            </Grid>\n\n            <Grid item xs={7} sm={8} md={7} lg={8}></Grid>\n\n            <Grid container direction={'row'} justifyContent='center' alignItems='center'>\n    \n                <Grid item xs={4} sm={6} style={SpaceItemsJustify}>\n                    <Button variant=\"contained\" color={'error'} onClick={resetAll}>Resetar</Button>        \n                </Grid>\n                \n                <Grid item xs={4} sm={6} style={SpaceItemsJustify}>\n                    <Button variant=\"contained\" color={'primary'} onClick={nextTurnButton}>Pr√≥ximo turno</Button>    \n                </Grid>\n            \n            </Grid>\n\n        </Grid>\n        \n\n    </div>)\n}","import { BrowserRouter as Router, Route, Link, Routes } from 'react-router-dom';\nimport React from 'react';\nimport Home from './Components/Home';\nimport Game from './Components/Game';\n\nvar AppStyle ={\n  margin: '-1vh',\n  padding: '0vw'\n}\n\nfunction App() {\n\n  return (\n    <div style={AppStyle}>\n      <Router>      \n        <Routes>\n          <Route path='/' element={<Home/>} exact/>\n          <Route path='/Game' element={<Game/>}/>\n        </Routes>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}